#version 330 core

// material components
vec4  MaterialColor = vec4(0.6f, 0.6f, 0.6f, 1.0f);
float MaterialSpecularPower = 2.0f;
float MaterialEmission = 0.0f;

//Other Stuff
uniform sampler2D diffuse;
uniform sampler2D normals;
uniform sampler2D specular;

//Input Format
in vec2 ex_TextureUVs;
in vec3 ex_Normals;
in vec4 ex_WorldPosition;

//Output Format
out vec4 out_Colour;
out vec4 out_Normal;
 
void main() {
	//DIFFUSE
	out_Colour = texture2D(diffuse, ex_TextureUVs);
	
	if(out_Colour.a < 0.8) { discard; }
	
	//SPECULAR POWER
	out_Colour.a = MaterialSpecularPower;
	
	//NORMALS
	out_Normal = 0.5f * vec4(ex_Normals + 1.0f, 0.0f);
	
	//EMISSION
	out_Normal.a = MaterialEmission;
}